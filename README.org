* Prerequisites:
- ASDF
- cl-ppcre
- osicat
- alexandria
- babel

* Installation:

The  best  way   to  get  cl-i18n  working  is   using  the  excellent
[[http://www.quicklisp.org/][quicklisp]]

#+BEGIN_SRC common-lisp
(ql:quickload "cl-i18n")
#+END_SRC

* Usage
  This library can load translations from file formats of the following types:
- [[https://www.gnu.org/software/gettext/][GNU gettext]] text file (AKA PO files);
- [[https://www.gnu.org/software/gettext/][GNU gettext]] binary file (AKA MO files);
- its native file formats (essentially a Common lisp S-exp).
  
Check the examples/ directory for an usage example.

* Extracting translatable strings:

#+BEGIN_SRC common-lisp
(cl-i18n-utils:gen-translation-file ("/src/" "klingon.lisp" :ext "lisp$"))
#+END_SRC

  Will extract  all #!  strings from all  the files in  directory "/src/"
  which name ends  in "lisp" and set up a  basic translation resource in
  klingon.lisp (*Note: the output file if exists will be overwritten*).

  To make it work with CL-WHO, use the “str” directive, as in
#+BEGIN_SRC common-lisp
    (with-html-output *out*
      (:p (str #!"Blood and honour!")))
#+END_SRC
  
  Please note that the library can accept gettext MO or PO files so
  nothing prevents you using GNU xgettext to extracts strings that needs to
  be translated and use its output as translation file.
  
* Old version incompatibility

This version deeply changed the  file format of the translation table,
however you can convert from the old format to the new one with:

#+BEGIN_SRC common-lisp
(cl-i18n-utils:convert-save-dictionary oldfile-path new-filepath)
#+END_SRC

*Note: the output file if exists will be overwritten*

* Bugs and issues

  Please send all bugs reports to cage@katamail.com

** Known issues
- Documentation is missing;
- Source code is mostly undocumented;
- PO file parser is slow.

* Contributors:

- Leslie P. Polzer <polzer@stardawn.org> (base)
- Vilson Vieira <vilson@void.cc> (string extractor)
- Cage <cage@katamail.com> (developer and maintainer) 

